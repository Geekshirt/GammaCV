webpackJsonp([44],{527:function(e,n){e.exports=[{license:"MIT",author:"Mihail Zachepilo(mihailzachepilo@gmail.com)\nCopyright 2018 Peculiar Ventures and Pentatonica.\nAll rights reserved."},{name:"SlidingWindow",description:[{type:"paragraph",children:["We want to keep our algorythms clear, so to prepare a data for another\n algorythm we need a kind of getting data in different view. SlidingWindow is a helper\n in searching objects in an image, putting each window snaphot as a column,\n this makes easier to apply another algorythms that should wokrs with that data."]}],examples:[{title:"example",description:"// this operation will output data in next stragtegy:\n // |xyzw|    |xyzqwe|\n // |qwer| -> |yzwwer|\n // |asdf|    |qweasd|\n //           |wersdf|\n // where each column is a one state of sliding window,\n // and each pixel in a row is a one pixel in a sliding window.\n slidingWindowOp(inputImage, 2, 1, 0);"}],params:[{name:"tSrc",description:"The source data to be processed.",type:[{type:"Tensor"}]},{name:"windowSize",description:null,type:[{type:"number"},{applications:[{type:"number"}],type:"Array"}]},{name:"stride",description:"window stride.",type:[{type:"number"},{applications:[{type:"number"}],type:"Array"}],optional:!0},{name:"strategy",description:"output shape strategy.\n ENUM:\n   0(default): [WH * WW, N, 4];\n   1: [N, WH * WW, 4];\n   2: [1, WH * WW * N, 4];\n   2: [WH * WW * N, 1, 4];\n LEGEND:\n   WH - window height,\n   WW - window width,\n   N - number of possible windows.\n\nTODO: Reviw description (@worldthirteen, @apilguk)\nTODO: Review strategy API",type:[{type:"number"}],optional:!0}]}]}});